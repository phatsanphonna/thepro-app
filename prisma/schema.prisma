generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "mongodb"
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

enum FileType {
  VIDEO
  FILE
}

model UserAuth {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  publicId String @unique @default(uuid())

  email      String  @unique
  isVerified Boolean @default(false)

  password String

  role    Role[]     @default(value: [STUDENT])
  Student Student?
}

model Student {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userAuth   UserAuth @relation(fields: [userAuthId], references: [publicId])
  userAuthId String   @unique

  firstname String
  lastname  String
  nickname  String

  telephoneNumber         String
  guardianTelephoneNumber String

  assignment   Assignment[] @relation(fields: [assignmentId], references: [id])
  assignmentId String[]     @db.ObjectId
}

model File {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name     String
  type     FileType
  location String

  assignment   Assignment[] @relation(fields: [assignmentId], references: [id])
  assignmentId String[]     @db.ObjectId
}

model Assignment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title      String
  descripton String

  material   File[]   @relation(fields: [materialId], references: [id])
  materialId String[] @db.ObjectId

  assignToStudent   Student[] @relation(fields: [assignToStudentId], references: [id])
  assignToStudentId String[]  @db.ObjectId
}
